<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Serilog.Extras.Web</name>
    </assembly>
    <members>
        <member name="T:Serilog.Extras.Web.Enrichers.HttpRequestClientHostIPEnricher">
            <summary>
            Enrich log events with the Client IP Address.
            </summary>
        </member>
        <member name="F:Serilog.Extras.Web.Enrichers.HttpRequestClientHostIPEnricher.HttpRequestClientHostIPPropertyName">
            <summary>
            The property name added to enriched log events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpRequestClientHostIPEnricher.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Serilog.Extras.Web.Enrichers.HttpRequestClientHostIPEnricher"/> class with <see cref="P:Serilog.Extras.Web.Enrichers.HttpRequestClientHostIPEnricher.CheckForHttpProxies"/> set to [true].
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpRequestClientHostIPEnricher.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Serilog.Extras.Web.Enrichers.HttpRequestClientHostIPEnricher"/> class.
            </summary>
            <param name="checkForHttpProxies">if set to <c>true</c> this Enricher also checks for HTTP proxies and their X-FORWARDED-FOR header.</param>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpRequestClientHostIPEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event.
            </summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
        <member name="P:Serilog.Extras.Web.Enrichers.HttpRequestClientHostIPEnricher.CheckForHttpProxies">
            <summary>
            Gets or sets a value indicating whether this enricher will check for possible HTTP proxies via X-FORWARDED-FOR headers.
            </summary>
            <value>
            <c>true</c> if [check for HTTP proxies]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Serilog.Extras.Web.Enrichers.HttpRequestClientHostNameEnricher">
            <summary>
            Enrich log events with the Client Host Name.
            </summary>
        </member>
        <member name="F:Serilog.Extras.Web.Enrichers.HttpRequestClientHostNameEnricher.HttpRequestClientHostNamePropertyName">
            <summary>
            The property name added to enriched log events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpRequestClientHostNameEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event.
            </summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
        <member name="T:Serilog.Extras.Web.Enrichers.HttpRequestRawUrlEnricher">
            <summary>
            Enrich log events with the Raw Url of the Request.
            </summary>
        </member>
        <member name="F:Serilog.Extras.Web.Enrichers.HttpRequestRawUrlEnricher.HttpRequestRawUrlPropertyName">
            <summary>
            The property name added to enriched log events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpRequestRawUrlEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event.
            </summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
        <member name="T:Serilog.Extras.Web.Enrichers.HttpRequestTypeEnricher">
            <summary>
            Enrich log events with the HTTP Request Type.
            </summary>
        </member>
        <member name="F:Serilog.Extras.Web.Enrichers.HttpRequestTypeEnricher.HttpRequestTypePropertyName">
            <summary>
            The property name added to enriched log events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpRequestTypeEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event.
            </summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
        <member name="T:Serilog.Extras.Web.Enrichers.HttpRequestUrlEnricher">
            <summary>
            Enrich log events with the Url of the Request.
            For the full, raw Url <see cref="T:Serilog.Extras.Web.Enrichers.HttpRequestRawUrlEnricher"/>.
            </summary>
        </member>
        <member name="F:Serilog.Extras.Web.Enrichers.HttpRequestUrlEnricher.HttpRequestUrlPropertyName">
            <summary>
            The property name added to enriched log events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpRequestUrlEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event.
            </summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
        <member name="T:Serilog.Extras.Web.Enrichers.HttpRequestUrlReferrerEnricher">
            <summary>
            Enrich log events with the Url of the Referrer.
            </summary>
        </member>
        <member name="F:Serilog.Extras.Web.Enrichers.HttpRequestUrlReferrerEnricher.HttpRequestUrlReferrerPropertyName">
            <summary>
            The property name added to enriched log events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpRequestUrlReferrerEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event.
            </summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
        <member name="T:Serilog.Extras.Web.Enrichers.HttpRequestUserAgentEnricher">
            <summary>
            Enrich log events with the Client User Agent.
            </summary>
        </member>
        <member name="F:Serilog.Extras.Web.Enrichers.HttpRequestUserAgentEnricher.HttpRequestUserAgentPropertyName">
            <summary>
            The property name added to enriched log events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpRequestUserAgentEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event.
            </summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
        <member name="T:Serilog.Extras.Web.Enrichers.UserNameEnricher">
            <summary>
            Enrich log events with the UserName property when available in the HttpContext.
            </summary>
        </member>
        <member name="F:Serilog.Extras.Web.Enrichers.UserNameEnricher.UserNamePropertyName">
            <summary>
            The property name added to enriched log events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.UserNameEnricher.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Serilog.Extras.Web.Enrichers.UserNameEnricher"/> class.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.UserNameEnricher.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Serilog.Extras.Web.Enrichers.UserNameEnricher"/> class.
            </summary>
            <param name="anonymousUsername">The anonymous username. Leave null if you do not want to use anonymous user names. By default it is (anonymous).</param>
            <param name="noneUsername">The none username. If there is no username to be found, it will output this username. Leave null (default) to ignore non usernames.</param>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.UserNameEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event with the current ASP.NET user name, if User.Identity.IsAuthenticated is true.</summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
        <member name="T:Serilog.Extras.Web.ApplicationLifecycleModule">
            <summary>
            HTTP module that logs application request and error events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.ApplicationLifecycleModule.Register">
            <summary>
            Register the module with the application (called automatically;
            do not call this explicitly from your code).
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.ApplicationLifecycleModule.Init(System.Web.HttpApplication)">
            <summary>
            Initializes a module and prepares it to handle requests.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpApplication"/> that provides access to the methods, properties, and events common to all application objects within an ASP.NET application </param>
        </member>
        <member name="M:Serilog.Extras.Web.ApplicationLifecycleModule.Dispose">
            <summary>
            Disposes of the resources (other than memory) used by the module that implements <see cref="T:System.Web.IHttpModule"/>.
            </summary>
        </member>
        <member name="P:Serilog.Extras.Web.ApplicationLifecycleModule.DebugLogPostedFormData">
            <summary>
            When set to true, form data will be written via a debug-level event.
            The default is false. Requires that <see cref="P:Serilog.Extras.Web.ApplicationLifecycleModule.IsEnabled"/> is also
            true (which it is, by default).
            </summary>
        </member>
        <member name="P:Serilog.Extras.Web.ApplicationLifecycleModule.IsEnabled">
            <summary>
            When set to true, request details and errors will be logged. The default
            is true.
            </summary>
        </member>
        <member name="P:Serilog.Extras.Web.ApplicationLifecycleModule.RequestLoggingLevel">
            <summary>
            The level at which to log HTTP requests. The default is Information.
            </summary>
        </member>
        <member name="T:Serilog.Extras.Web.Enrichers.HttpRequestTraceIdEnricher">
            <summary>
            Enrich log events with a HttpRequestTraceId GUID matching the
            RequestTraceIdentifier assigned by IIS and used throughout
            ASP.NET/ETW. IIS ETW tracing must be enabled for this to work.
            </summary>
        </member>
        <member name="F:Serilog.Extras.Web.Enrichers.HttpRequestTraceIdEnricher.HttpRequestTraceIdPropertyName">
            <summary>
            The property name added to enriched log events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpRequestTraceIdEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event with an id assigned to the currently-executing HTTP request, if any.
            </summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
        <member name="T:Serilog.Extras.Web.Enrichers.HttpRequestNumberEnricher">
            <summary>
            Enrich log events with a HttpRequestNumber unique within the current
            logging session.
            </summary>
        </member>
        <member name="F:Serilog.Extras.Web.Enrichers.HttpRequestNumberEnricher.HttpRequestNumberPropertyName">
            <summary>
            The property name added to enriched log events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpRequestNumberEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event with the number assigned to the currently-executing HTTP request, if any.
            </summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
        <member name="T:Serilog.Extras.Web.Enrichers.HttpSessionIdEnricher">
            <summary>
            Enrich log events with the HttpSessionId property.
            </summary>
        </member>
        <member name="F:Serilog.Extras.Web.Enrichers.HttpSessionIdEnricher.HttpSessionIdPropertyName">
            <summary>
            The property name added to enriched log events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpSessionIdEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event with the current ASP.NET session id, if sessions are enabled.</summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
        <member name="T:Serilog.Extras.Web.Enrichers.HttpRequestIdEnricher">
            <summary>
            Enrich log events with a HttpRequestId GUID.
            </summary>
        </member>
        <member name="F:Serilog.Extras.Web.Enrichers.HttpRequestIdEnricher.HttpRequestIdPropertyName">
            <summary>
            The property name added to enriched log events.
            </summary>
        </member>
        <member name="M:Serilog.Extras.Web.Enrichers.HttpRequestIdEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event with an id assigned to the currently-executing HTTP request, if any.
            </summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
    </members>
</doc>
